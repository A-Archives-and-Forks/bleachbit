build: off
version: 4.6.1.{build}
image: Visual Studio 2013

environment:
    PYTHON_HOME: 'x86-windows\tools\python3'
    SZ_EXE   :   '"C:/Program Files/7-Zip/7z.exe"'
    make : 'C:/MinGW/bin/mingw32-make.exe'

init:
  - 'systeminfo | findstr /B /C:"OS Name" /C:"OS Version"' # show Windows version
  - 'echo PYTHON_HOME=%PYTHON_HOME%'

install:
  - ps: if (-not (Test-Path gtk.zip)) { Start-FileDownload "https://github.com/mkhon/vcpkg/releases/download/gtk3-introspection-v1/gtk3.24-x86-windows.zip" -FileName gtk3.24-x86-windows.zip}
  - ps: Get-FileHash gtk3.24-x86-windows.zip
  - '%SZ_EXE% x gtk3.24-x86-windows.zip'
  - '%PYTHON_HOME%\python.exe -V' # show Python version
  - '%PYTHON_HOME%\python.exe -m ensurepip'
  - '%PYTHON_HOME%\Scripts\pip3.exe --version' # show pip version
  - ps: if (-not (Test-Path gtk-themes.zip )) { Start-FileDownload "https://github.com/mkhon/vcpkg/releases/download/gtk3-introspection-v1/gtk-themes.zip" }
  - ps: Get-FileHash gtk-themes.zip
  - '%SZ_EXE% x gtk-themes.zip'
  - 'XCOPY /E gtk-themes\*.* %PYTHON_HOME%'
  - '%PYTHON_HOME%\Scripts\pip3.exe install psutil'
  - '%PYTHON_HOME%\Scripts\pip3.exe install pypiwin32'
  - '%PYTHON_HOME%\Scripts\pip3.exe install winshell'
  - '%PYTHON_HOME%\Scripts\pip3.exe install py2exe'
  - '%PYTHON_HOME%\Scripts\pip3.exe install scandir'
  - '%PYTHON_HOME%\Scripts\pip3.exe install chardet'
  - '%PYTHON_HOME%\Scripts\pip3.exe install requests'
  - '%PYTHON_HOME%\Scripts\pip3.exe install plyer'
  - '%PYTHON_HOME%\Scripts\pip3.exe install win-unicode-console'
  - ps: if (-not (Test-Path PyGObject-3.42.0-cp310-cp310-win32.whl)) { Start-FileDownload "https://github.com/mkhon/vcpkg/releases/download/gtk3-introspection-v1/PyGObject-3.42.0-cp310-cp310-win32.whl" }
  - '%PYTHON_HOME%\Scripts\pip3.exe install PyGObject-3.42.0-cp310-cp310-win32.whl'
  - 'windows\python-gtk3-fixup.bat %PYTHON_HOME%\..\..'
  - ps: if (-not (Test-Path upx.zip)) { Start-FileDownload "https://github.com/upx/upx/releases/download/v4.1.0/upx-4.1.0-win64.zip" -FileName upx.zip}
  - ps: Get-FileHash upx.zip
  - '%SZ_EXE% x upx.zip'
  - 'rename upx-4.1.0-win64 upx'
  - 'dir .\upx\'
  - set PATH=%PATH%;%PYTHON_HOME%\..\gettext\bin
# Show version numbers of installed software.
  - 'msgunfmt -V'
#  - 'strip.exe -V'
  - '"c:\Program Files (x86)\NSIS\makensis.exe" /version'

build_script:
  - ps: $env:REV8 = $env:APPVEYOR_REPO_COMMIT.Substring(0,8)
  - 'echo revision = "%REV8%" > bleachbit\Revision.py'
  - 'echo build_number = "%APPVEYOR_BUILD_NUMBER%" > bleachbit\Revision.py'
  - '%make% -C po local'
  - '%PYTHON_HOME%\python.exe -m windows.setup_py2exe'
  - 'move windows\BleachBit*.exe .'
  - 'move windows\BleachBit*.zip .'
  - ps: Get-FileHash BleachBit-*

cache:
  - gtk3.24-x86-windows.zip -> appveyor.yml
  - PyGObject-3.42.0-cp310-cp310-win32.whl -> appveyor.yml
  - gtk-themes.zip -> appveyor.yml
  - upx.zip -> appveyor.yml

test_script:
# coveralls.io
  - '%PYTHON_HOME%\Scripts\pip3.exe install python-coveralls requests[security]'
# shorten very long path because of error https://github.com/az0/bleachbit/issues/166
  - 'set PATH=c:\windows\system32;c:\windows;c:\windows\system32\wbem;c:\windows\SysWOW64\WindowsPowerShell\v1.0\'
  - '%PYTHON_HOME%\Scripts\pip3.exe install mock'
  - 'SET DESTRUCTIVE_TESTS=T'
  - '%PYTHON_HOME%\Scripts\coverage.exe run --include="bleachbit/*" tests/TestAll.py'

artifacts:
  - path: BleachBit-*-setup.exe
    name: FullInstaller

  - path: BleachBit-*-setup-English.exe
    name: EnglishInstaller

  - path: BleachBit-*-portable.zip
    name: Portable

  - path: .coverage

deploy:
  - provider: S3
    access_key_id:
      secure: CrPvjz7Jvg4gwOHKxUsL0PPR4mqAjB2p15/pvFw3fCk=
    secret_access_key:
      secure: VoAH5pVyhmTK3/KRuV5WcgfkTR3k/M9QDt7UD6ewcwNfkUvMynwjAHnKCG4vR0Rx
    bucket: bleachbitci
    folder: dl/$(APPVEYOR_BUILD_VERSION)-$(APPVEYOR_REPO_BRANCH)
    artifact:
    set-public: true
    reduced_redundancy: true
